var d=Object.defineProperty;var g=(s,a,t)=>a in s?d(s,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[a]=t;var e=(s,a,t)=>(g(s,typeof a!="symbol"?a+"":a,t),t);import{cQ as l,cR as W,cS as C,eg as f,cU as w,cV as y,aq as T,cW as c,cX as R}from"./index.0708ba85.js";import{C as S,a as b,G as E,b as A}from"./contract-appuri-2a88c8fb.browser.esm.23afa3bd.js";import{C as B}from"./contract-interceptor-6f8989ff.browser.esm.e43043f9.js";import{C as M,a as O}from"./contract-owner-2ddff556.browser.esm.08a4a466.js";import{C as v}from"./contract-platform-fee-36bf5ae3.browser.esm.c2ce0be2.js";import{C as I}from"./contract-roles-fa8ea1ef.browser.esm.159af250.js";import{C as P}from"./contract-sales-51bfc7b5.browser.esm.bc02204e.js";import{S as U}from"./erc-721-standard-b44f2103.browser.esm.336c12d3.js";import{a as k}from"./erc-721-00719051.browser.esm.b8b8883a.js";import"./setErc20Allowance-f181219a.browser.esm.020d3250.js";import"./QueryParams-8a30379b.browser.esm.793fc6ad.js";import"./signature-ff05b7f7.browser.esm.fe359107.js";import"./index.c05fda0a.js";import"./assertEnabled-bf987093.browser.esm.625e8039.js";import"./drop-claim-conditions-12b93933.browser.esm.d18c57e6.js";const i=class extends U{constructor(t,r,n){let h=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},p=arguments.length>4?arguments[4]:void 0,m=arguments.length>5?arguments[5]:void 0,u=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new W(t,r,p,h,n);super(u,n,m);e(this,"mint",c(async t=>this.erc721.mint.prepare(t)));e(this,"mintTo",c(async(t,r)=>this.erc721.mintTo.prepare(t,r)));e(this,"mintBatch",c(async t=>this.erc721.mintBatch.prepare(t)));e(this,"mintBatchTo",c(async(t,r)=>this.erc721.mintBatchTo.prepare(t,r)));e(this,"burn",c(t=>this.erc721.burn.prepare(t)));this.abi=C.parse(p||[]),this.metadata=new S(this.contractWrapper,f,this.storage),this.app=new b(this.contractWrapper,this.metadata,this.storage),this.roles=new I(this.contractWrapper,i.contractRoles),this.royalties=new M(this.contractWrapper,this.metadata),this.sales=new P(this.contractWrapper),this.encoder=new w(this.contractWrapper),this.estimator=new E(this.contractWrapper),this.events=new A(this.contractWrapper),this.platformFees=new v(this.contractWrapper),this.interceptor=new B(this.contractWrapper),this.signature=new k(this.contractWrapper,this.storage),this.owner=new O(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async isTransferRestricted(){return!await this.contractWrapper.read("hasRole",[y("transfer"),T])}async getMintTransaction(t,r){return this.erc721.getMintTransaction(t,r)}async prepare(t,r,n){return R.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:n})}async call(t,r,n){return this.contractWrapper.call(t,r,n)}};let o=i;e(o,"contractRoles",l);export{o as NFTCollection};
