var d=Object.defineProperty;var l=(s,a,t)=>a in s?d(s,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[a]=t;var e=(s,a,t)=>(l(s,typeof a!="symbol"?a+"":a,t),t);import{ak as g,al as C,am as W,c3 as f,ao as w,ap as y,aq as T,ar as o,as as R}from"./index.0708ba85.js";import{C as S,a as b,G as E,b as A}from"./contract-appuri-2a88c8fb.browser.esm.25c28503.js";import{C as B}from"./contract-interceptor-6f8989ff.browser.esm.bab3be8e.js";import{C as M,a as O}from"./contract-owner-2ddff556.browser.esm.add7f4e2.js";import{C as k}from"./contract-platform-fee-36bf5ae3.browser.esm.d72a8814.js";import{C as v}from"./contract-roles-fa8ea1ef.browser.esm.b9f06d57.js";import{C as I}from"./contract-sales-51bfc7b5.browser.esm.d0c8e4bd.js";import{S as P}from"./erc-721-standard-b44f2103.browser.esm.d608886b.js";import{a as x}from"./erc-721-00719051.browser.esm.d9804ba4.js";import"./setErc20Allowance-f181219a.browser.esm.a541b727.js";import"./QueryParams-8a30379b.browser.esm.10f5a076.js";import"./signature-ff05b7f7.browser.esm.be1d49c2.js";import"./index.c05fda0a.js";import"./assertEnabled-bf987093.browser.esm.b8916aaa.js";import"./drop-claim-conditions-12b93933.browser.esm.3d5bb886.js";const i=class extends P{constructor(t,r,n){let h=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},p=arguments.length>4?arguments[4]:void 0,m=arguments.length>5?arguments[5]:void 0,u=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new C(t,r,p,h,n);super(u,n,m);e(this,"mint",o(async t=>this.erc721.mint.prepare(t)));e(this,"mintTo",o(async(t,r)=>this.erc721.mintTo.prepare(t,r)));e(this,"mintBatch",o(async t=>this.erc721.mintBatch.prepare(t)));e(this,"mintBatchTo",o(async(t,r)=>this.erc721.mintBatchTo.prepare(t,r)));e(this,"burn",o(t=>this.erc721.burn.prepare(t)));this.abi=W.parse(p||[]),this.metadata=new S(this.contractWrapper,f,this.storage),this.app=new b(this.contractWrapper,this.metadata,this.storage),this.roles=new v(this.contractWrapper,i.contractRoles),this.royalties=new M(this.contractWrapper,this.metadata),this.sales=new I(this.contractWrapper),this.encoder=new w(this.contractWrapper),this.estimator=new E(this.contractWrapper),this.events=new A(this.contractWrapper),this.platformFees=new k(this.contractWrapper),this.interceptor=new B(this.contractWrapper),this.signature=new x(this.contractWrapper,this.storage),this.owner=new O(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async isTransferRestricted(){return!await this.contractWrapper.read("hasRole",[y("transfer"),T])}async getMintTransaction(t,r){return this.erc721.getMintTransaction(t,r)}async prepare(t,r,n){return R.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:n})}async call(t,r,n){return this.contractWrapper.call(t,r,n)}};let c=i;e(c,"contractRoles",g);export{c as NFTCollection};
